{"version":3,"sources":["../src/encryptedpassword.js"],"names":["EncryptedPassword","elementId","wrapper","document","querySelector","span","input","buttons","querySelectorAll","addEventListener","e","stopImmediatePropagation","preventDefault","startEditing","cancelEditing","dataset","novalue","style","display","prototype","moveFocus","disabled","id","removeAttribute","focus"],"mappings":"uJA8BO,GAAMA,CAAAA,CAAiB,CAAG,SAASC,CAAT,CAAoB,YAC3CC,CAAO,CAAGC,QAAQ,CAACC,aAAT,CAAuB,kCAAmCH,CAAnC,CAA+C,KAAtE,CADiC,CAEjD,KAAKI,IAAL,CAAYH,CAAO,CAACE,aAAR,CAAsB,MAAtB,CAAZ,CACA,KAAKE,KAAL,CAAaJ,CAAO,CAACE,aAAR,CAAsB,OAAtB,CAAb,CACA,KAAKG,OAAL,CAAeL,CAAO,CAACM,gBAAR,CAAyB,QAAzB,CAAf,CAGA,KAAKD,OAAL,CAAa,CAAb,EAAgBE,gBAAhB,CAAiC,OAAjC,CAA0C,SAACC,CAAD,CAAO,CAC7CA,CAAC,CAACC,wBAAF,GACAD,CAAC,CAACE,cAAF,GACA,CAAI,CAACC,YAAL,IACH,CAJD,EAOA,KAAKN,OAAL,CAAa,CAAb,EAAgBE,gBAAhB,CAAiC,OAAjC,CAA0C,SAACC,CAAD,CAAO,CAC7CA,CAAC,CAACC,wBAAF,GACAD,CAAC,CAACE,cAAF,GACA,CAAI,CAACE,aAAL,EACH,CAJD,EASA,GAAgC,GAA5B,GAAAZ,CAAO,CAACa,OAAR,CAAgBC,OAApB,CAAqC,CACjC,KAAKH,YAAL,KACA,KAAKN,OAAL,CAAa,CAAb,EAAgBU,KAAhB,CAAsBC,OAAtB,CAAgC,MACnC,CACJ,CA3BM,C,sBAkCPlB,CAAiB,CAACmB,SAAlB,CAA4BN,YAA5B,CAA2C,SAASO,CAAT,CAAoB,CAC3D,KAAKd,KAAL,CAAWW,KAAX,CAAiBC,OAAjB,CAA2B,QAA3B,CACA,KAAKZ,KAAL,CAAWe,QAAX,IACA,KAAKhB,IAAL,CAAUY,KAAV,CAAgBC,OAAhB,CAA0B,MAA1B,CACA,KAAKX,OAAL,CAAa,CAAb,EAAgBU,KAAhB,CAAsBC,OAAtB,CAAgC,MAAhC,CACA,KAAKX,OAAL,CAAa,CAAb,EAAgBU,KAAhB,CAAsBC,OAAtB,CAAgC,QAAhC,CAGA,GAAMI,CAAAA,CAAE,CAAG,KAAKf,OAAL,CAAa,CAAb,EAAgBe,EAA3B,CACA,KAAKf,OAAL,CAAa,CAAb,EAAgBgB,eAAhB,CAAgC,IAAhC,EACA,KAAKjB,KAAL,CAAWgB,EAAX,CAAgBA,CAAhB,CAEA,GAAIF,CAAJ,CAAe,CACX,KAAKd,KAAL,CAAWkB,KAAX,EACH,CACJ,CAfD,CAoBAxB,CAAiB,CAACmB,SAAlB,CAA4BL,aAA5B,CAA4C,UAAW,CACnD,KAAKR,KAAL,CAAWW,KAAX,CAAiBC,OAAjB,CAA2B,MAA3B,CACA,KAAKZ,KAAL,CAAWe,QAAX,IACA,KAAKhB,IAAL,CAAUY,KAAV,CAAgBC,OAAhB,CAA0B,QAA1B,CACA,KAAKX,OAAL,CAAa,CAAb,EAAgBU,KAAhB,CAAsBC,OAAtB,CAAgC,QAAhC,CACA,KAAKX,OAAL,CAAa,CAAb,EAAgBU,KAAhB,CAAsBC,OAAtB,CAAgC,MAAhC,CAGA,GAAMI,CAAAA,CAAE,CAAG,KAAKhB,KAAL,CAAWgB,EAAtB,CACA,KAAKhB,KAAL,CAAWiB,eAAX,CAA2B,IAA3B,EACA,KAAKhB,OAAL,CAAa,CAAb,EAAgBe,EAAhB,CAAqBA,CACxB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Encrypted password functionality.\n *\n * @module core_form/encryptedpassword\n * @package core_form\n * @class encryptedpassword\n * @copyright 2019 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Constructor for EncryptedPassword.\n *\n * @param {String} elementId The element to apply the encrypted password JS to\n */\nexport const EncryptedPassword = function(elementId) {\n    const wrapper = document.querySelector('div[data-encryptedpasswordid=\"' + elementId + '\"]');\n    this.span = wrapper.querySelector('span');\n    this.input = wrapper.querySelector('input');\n    this.buttons = wrapper.querySelectorAll('button');\n\n    // Edit button action.\n    this.buttons[0].addEventListener('click', (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.startEditing(true);\n    });\n\n    // Cancel button action.\n    this.buttons[1].addEventListener('click', (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.cancelEditing();\n    });\n\n    // If the value is not set yet, start editing and remove the cancel option - so that\n    // it saves something in the config table and doesn't keep repeat showing it as a new\n    // admin setting...\n    if (wrapper.dataset.novalue === 'y') {\n        this.startEditing(false);\n        this.buttons[1].style.display = 'none';\n    }\n};\n\n/**\n * Starts editing.\n *\n * @param {Boolean} moveFocus If true, sets focus to the edit box\n */\nEncryptedPassword.prototype.startEditing = function(moveFocus) {\n    this.input.style.display = 'inline';\n    this.input.disabled = false;\n    this.span.style.display = 'none';\n    this.buttons[0].style.display = 'none';\n    this.buttons[1].style.display = 'inline';\n\n    // Move the id around, which changes what happens when you click the label.\n    const id = this.buttons[0].id;\n    this.buttons[0].removeAttribute('id');\n    this.input.id = id;\n\n    if (moveFocus) {\n        this.input.focus();\n    }\n};\n\n/**\n * Cancels editing.\n */\nEncryptedPassword.prototype.cancelEditing = function() {\n    this.input.style.display = 'none';\n    this.input.disabled = true;\n    this.span.style.display = 'inline';\n    this.buttons[0].style.display = 'inline';\n    this.buttons[1].style.display = 'none';\n\n    // Move the id around, which changes what happens when you click the label.\n    const id = this.input.id;\n    this.input.removeAttribute('id');\n    this.buttons[0].id = id;\n};\n"],"file":"encryptedpassword.min.js"}